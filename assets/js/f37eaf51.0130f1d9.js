"use strict";(self.webpackChunkgns_3_docs=self.webpackChunkgns_3_docs||[]).push([[1896],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(k,l(l({ref:t},p),{},{components:n})):r.createElement(k,l({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6673:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"linux",title:"GNS3 Linux Install",sidebar_label:"Linux"},s=void 0,u={unversionedId:"getting-started/installation/linux",id:"getting-started/installation/linux",title:"GNS3 Linux Install",description:"Ubuntu-based distributions (64-bit only)",source:"@site/docs/getting-started/installation/linux.md",sourceDirName:"getting-started/installation",slug:"/getting-started/installation/linux",permalink:"/docs/getting-started/installation/linux",draft:!1,editUrl:"https://github.com/mother/gns3-docs/blob/master/docs/getting-started/installation/linux.md",tags:[],version:"current",frontMatter:{id:"linux",title:"GNS3 Linux Install",sidebar_label:"Linux"},sidebar:"someSidebar",previous:{title:"Mac",permalink:"/docs/getting-started/installation/mac"},next:{title:"ESXi",permalink:"/docs/getting-started/installation/esxi"}},p={},d=[{value:"Ubuntu-based distributions (64-bit only)",id:"ubuntu-based-distributions-64-bit-only",level:2},{value:"Debian-based distributions",id:"debian-based-distributions",level:2},{value:"Arch-based distributions",id:"arch-based-distributions",level:2},{value:"To launch the GNS3 Server",id:"to-launch-the-gns3-server",level:2}],c={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"ubuntu-based-distributions-64-bit-only"},"Ubuntu-based distributions (64-bit only)"),(0,i.kt)("p",null,"These instructions are for Ubuntu and all distributions based on it (like Linux Mint)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo add-apt-repository ppa:gns3/ppa\nsudo apt update                                \nsudo apt install gns3-gui gns3-server\n")),(0,i.kt)("p",null,"(when prompted whether non-root users should be allowed to use wireshark and ubridge, select \u2018Yes\u2019 both times)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"If you want IOU support")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo dpkg --add-architecture i386\nsudo apt update\nsudo apt install gns3-iou\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"To install Docker CE (Xenial_and_newer)")),(0,i.kt)("p",null,"Remove any old versions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo apt remove docker docker-engine docker.io\nsudo snap remove docker\n")),(0,i.kt)("p",null,"Install the following packages:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo apt-get install apt-transport-https ca-certificates curl \\ software-properties-common\n")),(0,i.kt)("p",null,"Import the official Docker GPG key:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n")),(0,i.kt)("p",null,"Add the appropriate repo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'sudo add-apt-repository \\\n"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) stable"\n')),(0,i.kt)("p",null,"Install Docker-CE:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt install docker-ce\n")),(0,i.kt)("p",null,"Finally, add your user to the following groups:"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"ubridge libvirt kvm wireshark docker")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo usermod -aG ubridge,libvirt,kvm,wireshark,docker $(whoami)\n")),(0,i.kt)("p",null,"Restart your user session by logging out and back in, or restarting the system."),(0,i.kt)("h2",{id:"debian-based-distributions"},"Debian-based distributions"),(0,i.kt)("p",null,"GNS3 is not available through apt; you will have to use ",(0,i.kt)("inlineCode",{parentName:"p"},"pipx"),"."),(0,i.kt)("p",null,"Refresh apt:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\n")),(0,i.kt)("p",null,"Install python and the required emulation & gui packages:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install python3 python3-pip pipx python3-pyqt5 python3-pyqt5.qtwebsockets python3-pyqt5.qtsvg qemu-kvm qemu-utils libvirt-clients libvirt-daemon-system virtinst dynamips software-properties-common ca-certificates curl gnupg2 \n")),(0,i.kt)("p",null,"Use pipx to install gns3:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pipx install gns3-server\npipx install gns3-gui\n")),(0,i.kt)("p",null,"To launch the GUI, we will need to prepare the virtual environment. Inject the GNS server and QT elements:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pipx inject gns3-gui gns3-server PyQt5\n")),(0,i.kt)("p",null,"Finally, launch with ",(0,i.kt)("inlineCode",{parentName:"p"},"gns3"),"."),(0,i.kt)("h2",{id:"arch-based-distributions"},"Arch-based distributions"),(0,i.kt)("p",null,"To install GNS3 on Archlinux you will need yay to install from Arch Users Repository ( AUR ), thats if it's not already installed."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"yay")," can be acquired either by compiling it from source or by downloading the pre-built binary version provided by GitHub Actions."),(0,i.kt)("p",null,"For the source method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -S --needed git base-devel\ngit clone https://aur.archlinux.org/yay.git\ncd yay\nmakepkg -si\n")),(0,i.kt)("p",null,"For the binary option:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -S --needed git base-devel\ngit clone https://aur.archlinux.org/yay-bin.git\ncd yay-bin\nmakepkg -si\n")),(0,i.kt)("p",null,"Then proceed with the setup process and confirm the installation."),(0,i.kt)("p",null,"For more detailed instructions, you can refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Jguer/yay"},"yay repository"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Install Prerequesits + docker:")),(0,i.kt)("p",null,"Next we will install pre-requesit packages from the same AUR source. Please note that mixing installation source may lead to unfuncional application or unstability:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yay -S qemu docker vpcs dynamips libvirt ubridge inetutils\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Install GNS3 Server and GUI")," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yay -S gns3-server gns3-gui \n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Finalize installation")),(0,i.kt)("p",null,"Finally you we need to add your user to the gns3 groups as demonstrated later and do reboot. "),(0,i.kt)("h2",{id:"to-launch-the-gns3-server"},"To launch the GNS3 Server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"gns3server\n")))}m.isMDXComponent=!0}}]);